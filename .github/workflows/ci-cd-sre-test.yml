#Deploying all K8s manifests to GKE

name: Running all K8s deployement in GKE

on:
  push:
    branches:
    - master

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GCLOUD_PROJECT_ID }}-gke      # TODO: update to cluster name
  GKE_ZONE: europe-north1-a	           # TODO: update to cluster zone

jobs:
  setup-and-deploy:
    name: Setup and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    #Push images to GCR
    - name: Push dummy-pdf-or-png image to asia.gcr
      uses: RafikFarhad/push-to-gcr-github-action@v5-beta
      with:
        gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }} 
        registry: asia.gcr.io
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
        image_name: dummy-pdf-or-png
        image_tag: latest
        context: ./sre/dummy-pdf-or-png

    - name: Push getfile-app image to asia.gcr
      uses: RafikFarhad/push-to-gcr-github-action@v5-beta
      with:
        gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }} 
        registry: asia.gcr.io
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
        image_name: getfile-app
        image_tag: latest
        context: ./sre/getfile-app



    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: '${{ secrets.GCLOUD_SVC_USER }}@${{ secrets.GCLOUD_PROJECT_ID }}.iam.gserviceaccount.com'

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
#        service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY}}
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials 
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GCLOUD_SERVICE_KEY}}
    
    # Deploy sample image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f ./sre/k8s-manifests/
